libcxxrt_freebsd_task:
  matrix:
  - freebsd_instance:
     image_family: freebsd-13-3
  - freebsd_instance:
     image_family: freebsd-15-0-snap
  - freebsd_instance:
     image_family: freebsd-14-0

  install_script: pkg install -y cmake ninja git

  clone_script: |
    if [ -z "$CIRRUS_PR" ]; then
      git clone --recursive --branch=$CIRRUS_BRANCH https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
      git reset --hard $CIRRUS_CHANGE_IN_REPO
    else
      git clone --recursive https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
      git fetch origin pull/$CIRRUS_PR/head:pull/$CIRRUS_PR
      git reset --hard $CIRRUS_CHANGE_IN_REPO
    fi
    git submodule sync
    git submodule update

  build_script: |
      mkdir Build
      cd Build
      cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
      ninja

  test_script: cd Build && ctest -j4

libcxxrt_master_task:
  freebsd_instance:
    image_family: freebsd-14-0
  install_script: pkg install -y cmake ninja git

  clone_script: |
    if [ -z "$CIRRUS_PR" ]; then
      git clone --recursive --branch=$CIRRUS_BRANCH https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
      git reset --hard $CIRRUS_CHANGE_IN_REPO
    else
      git clone --recursive https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
      git fetch origin pull/$CIRRUS_PR/head:pull/$CIRRUS_PR
      git reset --hard $CIRRUS_CHANGE_IN_REPO
    fi
    git submodule sync
    git submodule update

  install_libcxxrt_script: |
      git clone https://github.com/libcxxrt/libcxxrt.git
      mkdir -p libcxxrt/Build
      cd libcxxrt/Build
      cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
      ninja
      cp lib/libcxxrt.so /usr/local/lib

  build_script: |
      mkdir Build
      cd Build
      cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
      ninja

  test_script: cd Build && ctest -j4
